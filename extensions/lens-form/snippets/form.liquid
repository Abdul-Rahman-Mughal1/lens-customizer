<!-- ✅ ENHANCED UI WITH PROGRESS BAR - Applied to New Form -->
<style>
  /* Subtle Progress Bar Styles */
  .progress-container {
    width: 100%;
    background: #e9ecef;
    border-radius: 4px;
    padding: 2px;
    margin: 16px 0;
    box-shadow: none;
  }

  .progress-bar {
    height: 8px;
    background: #007bff;
    border-radius: 2px;
    transition: width 0.3s ease;
    position: relative;
    overflow: hidden;
  }

  .progress-bar::after {
    display: none;
  }

  @keyframes shimmer {
    0% {
      transform: translateX(-100%);
    }
    100% {
      transform: translateX(100%);
    }
  }

  .progress-steps {
    display: flex;
    justify-content: space-between;
    margin: 12px 0;
    position: relative;
  }

  .progress-step {
    display: flex;
    flex-direction: column;
    align-items: center;
    flex: 1;
    position: relative;
  }

  .step-circle {
    width: 32px;
    height: 32px;
    border-radius: 50%;
    background: #e9ecef;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 500;
    color: #6c757d;
    transition: all 0.2s ease;
    border: 2px solid transparent;
    z-index: 2;
    position: relative;
    font-size: 14px;
  }

  .step-circle.active {
    background: #007bff;
    color: white;
    border-color: #fff;
    box-shadow: none;
    transform: none;
  }

  .step-circle.completed {
    background: #28a745;
    color: white;
    border-color: #fff;
  }

  .step-circle.completed::before {
    content: '✓';
    font-size: 16px;
    font-weight: bold;
  }

  .step-circle.completed .step-number {
    display: none;
  }

  .step-label {
    margin-top: 6px;
    font-size: 11px;
    color: #6c757d;
    text-align: center;
    font-weight: 400;
    transition: color 0.2s ease;
  }

  .step-label.active {
    color: #007bff;
    font-weight: 500;
  }

  .step-connector {
    position: absolute;
    top: 16px;
    left: 50%;
    right: -50%;
    height: 2px;
    background: #e9ecef;
    z-index: 1;
    transition: background 0.2s ease;
  }

  .step-connector.completed {
    background: #007bff;
  }

  .progress-step:last-child .step-connector {
    display: none;
  }

  /* Subtle Right-Slider Modal Styles */
  #lens-drawer {
    position: fixed;
    top: 0;
    right: 0;
    height: 100vh;
    width: 45%;
    max-width: 100vw;
    background: #fafafa;
    z-index: 99999;
    box-shadow: -2px 0 16px rgba(0, 0, 0, 0.08);
    transform: translateX(100%);
    transition: transform 0.3s ease-in-out;
    overflow-y: auto;
    border-left: 1px solid #e0e0e0;
    display: block;
  }
  #lens-drawer.open {
    transform: translateX(0);
  }

  #lens-backdrop {
    display: none;
    position: fixed;
    inset: 0;
    background: rgba(0, 0, 0, 0.25);
    z-index: 99998;
  }
  #lens-backdrop.open {
    display: block;
  }

  .drawer-subtotal-sticky {
    position: sticky;
    bottom: 0;
    background: #fff8ec;
    box-shadow: 0 -2px 12px rgba(0, 0, 0, 0.07);
    font-size: 1.45rem;
    padding: 18px 32px;
    text-align: left;
    border-top: 1.5px solid #f2e9da;
    font-weight: 600;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .lens-modal-content {
    background: #ffffff;
    max-width: 100%;
    margin: 0;
    padding: 24px;
    border-radius: 0;
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
    position: relative;
    box-shadow: none;
    border: none;
    height: 100%;
  }

  .lens-modal-left {
    flex: 1 1 60%;
    min-width: 320px;
    max-height: 80vh;
    overflow-y: auto;
    padding-right: 20px;
  }

  .lens-modal-right {
    flex: 1 1 35%;
    min-width: 280px;
    text-align: center;
    background: #f8f8f8;
    padding: 20px;
    border-radius: 8px;
    box-shadow: none;
    border: 1px solid #e8e8e8;
  }

  .lens-close-btn {
    position: absolute;
    top: 16px;
    right: 16px;
    background: #6c757d;
    color: white;
    border: none;
    padding: 8px 12px;
    border-radius: 4px;
    cursor: pointer;
    font-size: 16px;
    font-weight: normal;
    transition: background-color 0.2s ease;
    box-shadow: none;
    z-index: 1000;
  }

  .lens-close-btn:hover {
    background: #5a6268;
    transform: none;
    box-shadow: none;
  }

  /* Subtle Button Styles */
  .lens-option-btn {
    display: block;
    width: 100%;
    padding: 16px;
    margin: 12px 0;
    background: #007bff;
    color: white;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    font-size: 16px;
    font-weight: 500;
    transition: background-color 0.2s ease;
    position: relative;
    overflow: hidden;
    box-shadow: none;
  }

  .lens-option-btn::before {
    display: none;
  }

  .lens-option-btn:hover {
    background: #0056b3;
    transform: none;
    box-shadow: none;
  }

  .lens-option-btn:active {
    transform: none;
  }

  .sub-option-btn {
    display: inline-block;
    width: 48%;
    padding: 12px;
    margin: 6px 1%;
    background: #28a745;
    color: white;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    font-size: 14px;
    font-weight: 500;
    transition: background-color 0.2s ease;
    box-shadow: none;
  }

  .sub-option-btn:hover {
    background: #218838;
    transform: none;
    box-shadow: none;
  }

  /* Subtle Form Sections */
  .form-section {
    display: none;
    background: #ffffff;
    padding: 20px;
    border-radius: 8px;
    margin: 16px 0;
    box-shadow: none;
    border: 1px solid #e0e0e0;
  }

  .form-section.active {
    display: block;
    animation: none;
  }

  @keyframes slideIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .form-section h2 {
    color: #495057;
    margin-bottom: 20px;
    font-size: 22px;
    font-weight: 600;
    text-align: left;
    background: none;
    -webkit-background-clip: initial;
    -webkit-text-fill-color: initial;
    background-clip: initial;
  }

  .form-section h3 {
    color: #6c757d;
    margin: 20px 0 12px 0;
    font-size: 18px;
    font-weight: 500;
    border-left: 3px solid #dee2e6;
    padding-left: 12px;
  }

  /* Subtle Form Controls */
  .form-group {
    margin-bottom: 16px;
  }

  .form-group label {
    display: block;
    margin-bottom: 6px;
    font-weight: 500;
    color: #6c757d;
    font-size: 14px;
    text-transform: none;
    letter-spacing: normal;
  }

  .form-group select,
  .form-group input {
    width: 100%;
    padding: 10px 12px;
    border: 1px solid #ced4da;
    border-radius: 4px;
    font-size: 14px;
    transition: border-color 0.2s ease;
    background: white;
    box-shadow: none;
  }

  .form-group select:focus,
  .form-group input:focus {
    outline: none;
    border-color: #80bdff;
    box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.1);
    transform: none;
  }

  .form-row {
    display: flex;
    gap: 20px;
  }

  .form-row .form-group {
    flex: 1;
  }

  /* Subtle Reading Powers Grid */
  .reading-powers {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
    gap: 12px;
    margin: 16px 0;
  }

  .reading-power-btn {
    padding: 12px;
    background: #6c757d;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 14px;
    font-weight: 500;
    transition: background-color 0.2s ease;
    box-shadow: none;
  }

  .reading-power-btn:hover,
  .reading-power-btn.selected {
    background: #007bff;
    transform: none;
    box-shadow: none;
  }

  /* Subtle Action Buttons */
  .action-buttons {
    text-align: center;
    margin-top: 24px;
    display: flex;
    gap: 12px;
    justify-content: center;
    flex-wrap: wrap;
  }

  .btn-primary {
    background: #007bff;
    color: white;
    border: none;
    padding: 12px 24px;
    border-radius: 4px;
    cursor: pointer;
    font-size: 14px;
    font-weight: 500;
    transition: background-color 0.2s ease;
    box-shadow: none;
    min-width: 100px;
  }

  .btn-secondary {
    background: #6c757d;
    color: white;
    border: none;
    padding: 12px 24px;
    border-radius: 4px;
    cursor: pointer;
    font-size: 14px;
    font-weight: 500;
    transition: background-color 0.2s ease;
    box-shadow: none;
    min-width: 100px;
  }

  .btn-primary:hover {
    background: #0056b3;
    transform: none;
    box-shadow: none;
  }

  .btn-secondary:hover {
    background: #5a6268;
    transform: none;
    box-shadow: none;
  }

  /* Subtle Price Display */
  .price-display {
    background: #f8f9fa;
    padding: 16px;
    border-radius: 6px;
    margin: 16px 0;
    border-left: 3px solid #28a745;
    box-shadow: none;
    border: 1px solid #e9ecef;
  }

  .price-display h4 {
    margin: 0 0 12px 0;
    color: #495057;
    font-size: 16px;
    font-weight: 600;
  }

  .price-item {
    display: flex;
    justify-content: space-between;
    margin: 8px 0;
    padding: 6px 0;
    font-size: 14px;
  }

  .total-price {
    font-weight: bold;
    font-size: 16px;
    border-top: 1px solid #dee2e6;
    padding-top: 12px;
    margin-top: 12px;
    color: #495057;
  }

  /* Subtle Product Info */
  .lens-modal-right img {
    width: 100%;
    border-radius: 6px;
    margin-bottom: 16px;
    box-shadow: none;
    transition: none;
    border: 1px solid #e9ecef;
  }

  .lens-modal-right img:hover {
    transform: none;
  }

  .lens-modal-right h3 {
    color: #495057;
    margin-bottom: 12px;
    font-size: 18px;
    font-weight: 600;
  }

  .lens-modal-right p {
    color: #6c757d;
    margin: 12px 0;
    line-height: 1.5;
    font-size: 14px;
  }

  .lens-modal-right .price {
    font-size: 16px;
    font-weight: bold;
    color: #007bff;
    background: none;
    -webkit-background-clip: initial;
    -webkit-text-fill-color: initial;
    background-clip: initial;
  }

  /* Subtle Trigger Button */
  #open-lens-modal {
    padding: 12px 24px;
    background: #007bff;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 14px;
    font-weight: 500;
    transition: background-color 0.2s ease;
    box-shadow: none;
    position: relative;
    overflow: hidden;
  }

  #open-lens-modal::before {
    display: none;
  }

  #open-lens-modal:hover::before {
    display: none;
  }

  #open-lens-modal:hover {
    background: #0056b3;
    transform: none;
    box-shadow: none;
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    #lens-drawer {
      width: 100%;
    }

    .lens-modal-content {
      flex-direction: column;
      margin: 1vh auto;
      max-width: 98%;
      padding: 20px;
    }

    .lens-modal-left {
      padding-right: 0;
    }

    .form-row {
      flex-direction: column;
    }

    .reading-powers {
      grid-template-columns: repeat(2, 1fr);
    }

    .action-buttons {
      flex-direction: column;
    }

    .btn-primary,
    .btn-secondary {
      width: 100%;
      margin: 5px 0;
    }

    .sub-option-btn {
      width: 100%;
      margin: 5px 0;
    }

    .progress-steps {
      flex-wrap: wrap;
      gap: 10px;
    }

    .step-circle {
      width: 35px;
      height: 35px;
      font-size: 12px;
    }

    .step-label {
      font-size: 10px;
    }

    .step-connector {
      display: none;
    }
  }

  /* Loading Animation */
  .loading {
    display: inline-block;
    width: 20px;
    height: 20px;
    border: 3px solid rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    border-top-color: #fff;
    animation: spin 1s ease-in-out infinite;
  }

  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }

  /* Checkbox Enhancements */
  .form-group input[type='checkbox'] {
    width: auto;
    margin-right: 10px;
    transform: scale(1.2);
    accent-color: #667eea;
  }

  .form-group label:has(input[type='checkbox']) {
    display: flex;
    align-items: center;
    cursor: pointer;
    text-transform: none;
    letter-spacing: normal;
    font-weight: 500;
  }

  /* File Input Enhancement */
  .form-group input[type='file'] {
    padding: 10px;
    border: 2px dashed #667eea;
    background: #f8f9fa;
    cursor: pointer;
  }

  .form-group input[type='file']:hover {
    border-color: #5a67d8;
    background: #e9ecef;
  }

  /* Screen Title Enhancement */
  #lens-options-screen h2 {
    color: #2c3e50;
    margin-bottom: 25px;
    font-size: 28px;
    font-weight: 700;
    text-align: center;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  #sub-options-screen h2 {
    color: #2c3e50;
    margin-bottom: 25px;
    font-size: 28px;
    font-weight: 700;
    text-align: center;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }
</style>

<!-- Trigger Button -->
<button
  id="open-lens-drawer"
  onclick="openLensDrawer()"
  style="padding: 12px 30px; background: linear-gradient(135deg, #007bff 0%, #0056b3 100%); color: white; border: none; cursor: pointer; font-size: 18px; font-weight: 300; box-shadow: 0 4px 15px rgba(0, 123, 255, 0.3); border-radius: 30px; width: 100%;"
>
  Customize Lens
</button>

<!-- Lens Customization Modal -->
<div id="lens-drawer">
  <button class="lens-close-btn" onclick="closeLensDrawer()">×</button>
  <div class="lens-modal-content">
    <!-- LEFT: Form Content -->
    <div class="lens-modal-left">
      <!-- Progress Bar -->
      <div class="progress-container">
        <div class="progress-bar" id="progress-bar" style="width: 40%;"></div>
      </div>

      <!-- Progress Steps -->
      <div class="progress-steps">
        <div class="progress-step">
          <div class="step-circle completed" id="step-1"><span class="step-number">1</span></div>
          <div class="step-label">Lens Type</div>
          <div class="step-connector completed"></div>
        </div>
        <div class="progress-step">
          <div class="step-circle active" id="step-2"><span class="step-number">2</span></div>
          <div class="step-label active">Entry Method</div>
          <div class="step-connector"></div>
        </div>
        <div class="progress-step">
          <div class="step-circle" id="step-3"><span class="step-number">3</span></div>
          <div class="step-label">Details</div>
          <div class="step-connector"></div>
        </div>
        <div class="progress-step">
          <div class="step-circle" id="step-4"><span class="step-number">4</span></div>
          <div class="step-label">Options</div>
          <div class="step-connector"></div>
        </div>
        <div class="progress-step">
          <div class="step-circle" id="step-5"><span class="step-number">5</span></div>
          <div class="step-label">Complete</div>
        </div>
      </div>

      <!-- ✅ FIXED: Single Form with Dynamic Fields -->
      <form id="lens-cart-form" method="post" action="/cart/add" enctype="multipart/form-data">
        <!-- Hidden product fields (REQUIRED) -->
        <input type="hidden" id="product-id" value="{{ product.id }}">
        <input type="hidden" name="id" id="shopify-variant-id" value="{{ product.variants.first.id }}">
        <input
          type="hidden"
          id="product-title"
          name="product_title"
          value="{{ product.title }}"
        >
        <input
          type="hidden"
          id="base-product-price"
          name="base_price"
          value="{{ product.price | money_without_currency | replace: ',', '' }}"
        >
        <input type="hidden" name="quantity" value="1">
        <input type="hidden" name="form_type" value="product">

        <!-- ✅ CRITICAL FIX: Single Dynamic Lens Type Field -->
        <input type="hidden" name="properties[Lens Type]" id="dynamic-lens-type" value="">

        <!-- ✅ PRICING: Hidden field for additional price -->
        <input type="hidden" name="properties[_Additional Price]" id="additional-price" value="0">
        <!-- ✅ PRISM SELECTION VALUE -->
        <input type="hidden" name="properties[Prism Correction]" id="prism-correction" value="No">

        <!-- Lens Type Selection -->
        <div id="lens-options-screen">
          <h2>🔍 Select Your Lens Type</h2>
          <button type="button" class="lens-option-btn" onclick="selectLensType('single-vision')">
            👁️ Single Vision
          </button>
          <button type="button" class="lens-option-btn" onclick="selectLensType('bifocal-progressive')">
            👓 Bifocal & Progressive
          </button>
          <button type="button" class="lens-option-btn" onclick="selectLensType('reading')">📖 Reading</button>
          <button type="button" class="lens-option-btn btn-final-screen" onclick="selectLensType('non-prescription')">
            🔍 Non-Prescription
          </button>
          <button type="button" class="lens-option-btn" onclick="selectLensType('frame-only')">🖼️ Frame Only</button>
        </div>

        <!-- Sub-options for Single Vision and Bifocal/Progressive -->
        <div id="sub-options-screen" style="display: none;">
          <div style="display: flex; align-items: center; margin-bottom: 30px;">
            <div style="font-size: 48px; margin-right: 16px; color: #6c7ae0;">📝</div>
            <h2 style="color: #6c7ae0; font-size: 24px; font-weight: 600; margin: 0; line-height: 1.2;">
              How would you like to enter your prescription?
            </h2>
          </div>
          <button
            type="button"
            class="sub-option-btn"
            onclick="selectSubOption('manual')"
            style="background: #28a745; width: 100%; margin: 8px 0; padding: 16px; font-size: 16px; display: flex; align-items: center; justify-content: center;"
          >
            <span style="margin-right: 8px;">✍️</span> Enter Manually
          </button>
          <button
            type="button"
            class="sub-option-btn"
            onclick="selectSubOption('upload')"
            style="background: #28a745; width: 100%; margin: 8px 0; padding: 16px; font-size: 16px; display: flex; align-items: center; justify-content: center;"
          >
            <span style="margin-right: 8px;">📎</span> Upload Prescription
          </button>
          <div class="action-buttons" style="margin-top: 30px;">
            <button
              type="button"
              class="btn-secondary"
              onclick="goBack()"
              style="background: #6c757d; padding: 12px 24px; font-size: 14px;"
            >
              ← Back
            </button>
          </div>
        </div>

        <!-- Manual Prescription Form -->
        <div id="manual-form-screen" class="form-section">
          <h2>📋 Enter Your Prescription Details</h2>

          <!-- Entry Method -->
          <input type="hidden" name="properties[Entry Method]" value="Manual Entry">
          <input type="hidden" name="properties[Prescription Type]" id="prescription-type" value="manual">

          <!-- OD (Right Eye) -->
          <h3>👁️ OD (Right Eye)</h3>
          <div class="form-row">
            <div class="form-group">
              <label>SPH (Sphere)</label>
              <select name="properties[OD SPH]" id="od-sph">
                <option value="">Select SPH</option>
                <option value="+6.00">+6.00</option>
                <option value="+5.75">+5.75</option>
                <option value="+5.50">+5.50</option>
                <option value="+5.25">+5.25</option>
                <option value="+5.00">+5.00</option>
                <option value="+4.75">+4.75</option>
                <option value="+4.50">+4.50</option>
                <option value="+4.25">+4.25</option>
                <option value="+4.00">+4.00</option>
                <option value="+3.75">+3.75</option>
                <option value="+3.50">+3.50</option>
                <option value="+3.25">+3.25</option>
                <option value="+3.00">+3.00</option>
                <option value="+2.75">+2.75</option>
                <option value="+2.50">+2.50</option>
                <option value="+2.25">+2.25</option>
                <option value="+2.00">+2.00</option>
                <option value="+1.75">+1.75</option>
                <option value="+1.50">+1.50</option>
                <option value="+1.25">+1.25</option>
                <option value="+1.00">+1.00</option>
                <option value="+0.75">+0.75</option>
                <option value="+0.50">+0.50</option>
                <option value="+0.25">+0.25</option>
                <option value="0.00">0.00</option>
                <option value="-0.25">-0.25</option>
                <option value="-0.50">-0.50</option>
                <option value="-0.75">-0.75</option>
                <option value="-1.00">-1.00</option>
                <option value="-1.25">-1.25</option>
                <option value="-1.50">-1.50</option>
                <option value="-1.75">-1.75</option>
                <option value="-2.00">-2.00</option>
                <option value="-2.25">-2.25</option>
                <option value="-2.50">-2.50</option>
                <option value="-2.75">-2.75</option>
                <option value="-3.00">-3.00</option>
                <option value="-3.25">-3.25</option>
                <option value="-3.50">-3.50</option>
                <option value="-3.75">-3.75</option>
                <option value="-4.00">-4.00</option>
                <option value="-4.25">-4.25</option>
                <option value="-4.50">-4.50</option>
                <option value="-4.75">-4.75</option>
                <option value="-5.00">-5.00</option>
                <option value="-5.25">-5.25</option>
                <option value="-5.50">-5.50</option>
                <option value="-5.75">-5.75</option>
                <option value="-6.00">-6.00</option>
                <option value="-6.25">-6.25</option>
                <option value="-6.50">-6.50</option>
                <option value="-6.75">-6.75</option>
                <option value="-7.00">-7.00</option>
                <option value="-7.25">-7.25</option>
                <option value="-7.50">-7.50</option>
                <option value="-7.75">-7.75</option>
                <option value="-8.00">-8.00</option>
                <option value="-8.25">-8.25</option>
                <option value="-8.50">-8.50</option>
                <option value="-8.75">-8.75</option>
                <option value="-9.00">-9.00</option>
                <option value="-9.25">-9.25</option>
                <option value="-9.50">-9.50</option>
                <option value="-9.75">-9.75</option>
                <option value="-10.00">-10.00</option>
              </select>
            </div>
            <div class="form-group">
              <label>CYL (Cylinder)</label>
              <select name="properties[OD CYL]" id="od-cyl">
                <option value="">Select CYL</option>
                <option value="0.00">0.00</option>
                <option value="-0.25">-0.25</option>
                <option value="-0.50">-0.50</option>
                <option value="-0.75">-0.75</option>
                <option value="-1.00">-1.00</option>
                <option value="-1.25">-1.25</option>
                <option value="-1.50">-1.50</option>
                <option value="-1.75">-1.75</option>
                <option value="-2.00">-2.00</option>
                <option value="-2.25">-2.25</option>
                <option value="-2.50">-2.50</option>
                <option value="-2.75">-2.75</option>
                <option value="-3.00">-3.00</option>
                <option value="-3.25">-3.25</option>
                <option value="-3.50">-3.50</option>
                <option value="-3.75">-3.75</option>
                <option value="-4.00">-4.00</option>
              </select>
            </div>
            <div class="form-group">
              <label>AXIS</label>
              <select name="properties[OD AXIS]" id="od-axis">
                <option value="">Select AXIS</option>
                <option value="1°">1°</option>
                <option value="5°">5°</option>
                <option value="10°">10°</option>
                <option value="15°">15°</option>
                <option value="20°">20°</option>
                <option value="25°">25°</option>
                <option value="30°">30°</option>
                <option value="35°">35°</option>
                <option value="40°">40°</option>
                <option value="45°">45°</option>
                <option value="50°">50°</option>
                <option value="55°">55°</option>
                <option value="60°">60°</option>
                <option value="65°">65°</option>
                <option value="70°">70°</option>
                <option value="75°">75°</option>
                <option value="80°">80°</option>
                <option value="85°">85°</option>
                <option value="90°">90°</option>
                <option value="95°">95°</option>
                <option value="100°">100°</option>
                <option value="105°">105°</option>
                <option value="110°">110°</option>
                <option value="115°">115°</option>
                <option value="120°">120°</option>
                <option value="125°">125°</option>
                <option value="130°">130°</option>
                <option value="135°">135°</option>
                <option value="140°">140°</option>
                <option value="145°">145°</option>
                <option value="150°">150°</option>
                <option value="155°">155°</option>
                <option value="160°">160°</option>
                <option value="165°">165°</option>
                <option value="170°">170°</option>
                <option value="175°">175°</option>
                <option value="180°">180°</option>
              </select>
            </div>
          </div>

          <!-- OS (Left Eye) -->
          <h3>👁️ OS (Left Eye)</h3>
          <div class="form-row">
            <div class="form-group">
              <label>SPH (Sphere)</label>
              <select name="properties[OS SPH]" id="os-sph">
                <option value="">Select SPH</option>
                <option value="">Select SPH</option>
                <option value="+6.00">+6.00</option>
                <option value="+5.75">+5.75</option>
                <option value="+5.50">+5.50</option>
                <option value="+5.25">+5.25</option>
                <option value="+5.00">+5.00</option>
                <option value="+4.75">+4.75</option>
                <option value="+4.50">+4.50</option>
                <option value="+4.25">+4.25</option>
                <option value="+4.00">+4.00</option>
                <option value="+3.75">+3.75</option>
                <option value="+3.50">+3.50</option>
                <option value="+3.25">+3.25</option>
                <option value="+3.00">+3.00</option>
                <option value="+2.75">+2.75</option>
                <option value="+2.50">+2.50</option>
                <option value="+2.25">+2.25</option>
                <option value="+2.00">+2.00</option>
                <option value="+1.75">+1.75</option>
                <option value="+1.50">+1.50</option>
                <option value="+1.25">+1.25</option>
                <option value="+1.00">+1.00</option>
                <option value="+0.75">+0.75</option>
                <option value="+0.50">+0.50</option>
                <option value="+0.25">+0.25</option>
                <option value="0.00">0.00</option>
                <option value="-0.25">-0.25</option>
                <option value="-0.50">-0.50</option>
                <option value="-0.75">-0.75</option>
                <option value="-1.00">-1.00</option>
                <option value="-1.25">-1.25</option>
                <option value="-1.50">-1.50</option>
                <option value="-1.75">-1.75</option>
                <option value="-2.00">-2.00</option>
                <option value="-2.25">-2.25</option>
                <option value="-2.50">-2.50</option>
                <option value="-2.75">-2.75</option>
                <option value="-3.00">-3.00</option>
                <option value="-3.25">-3.25</option>
                <option value="-3.50">-3.50</option>
                <option value="-3.75">-3.75</option>
                <option value="-4.00">-4.00</option>
                <option value="-4.25">-4.25</option>
                <option value="-4.50">-4.50</option>
                <option value="-4.75">-4.75</option>
                <option value="-5.00">-5.00</option>
                <option value="-5.25">-5.25</option>
                <option value="-5.50">-5.50</option>
                <option value="-5.75">-5.75</option>
                <option value="-6.00">-6.00</option>
                <option value="-6.25">-6.25</option>
                <option value="-6.50">-6.50</option>
                <option value="-6.75">-6.75</option>
                <option value="-7.00">-7.00</option>
                <option value="-7.25">-7.25</option>
                <option value="-7.50">-7.50</option>
                <option value="-7.75">-7.75</option>
                <option value="-8.00">-8.00</option>
                <option value="-8.25">-8.25</option>
                <option value="-8.50">-8.50</option>
                <option value="-8.75">-8.75</option>
                <option value="-9.00">-9.00</option>
                <option value="-9.25">-9.25</option>
                <option value="-9.50">-9.50</option>
                <option value="-9.75">-9.75</option>
                <option value="-10.00">-10.00</option>
              </select>
            </div>
            <div class="form-group">
              <label>CYL (Cylinder)</label>
              <select name="properties[OS CYL]" id="os-cyl">
                <option value="">Select CYL</option>
                <option value="0.00">0.00</option>
                <option value="-0.25">-0.25</option>
                <option value="-0.50">-0.50</option>
                <option value="-0.75">-0.75</option>
                <option value="-1.00">-1.00</option>
                <option value="-1.25">-1.25</option>
                <option value="-1.50">-1.50</option>
                <option value="-1.75">-1.75</option>
                <option value="-2.00">-2.00</option>
                <option value="-2.25">-2.25</option>
                <option value="-2.50">-2.50</option>
                <option value="-2.75">-2.75</option>
                <option value="-3.00">-3.00</option>
                <option value="-3.25">-3.25</option>
                <option value="-3.50">-3.50</option>
                <option value="-3.75">-3.75</option>
                <option value="-4.00">-4.00</option>
              </select>
            </div>
            <div class="form-group">
              <label>AXIS</label>
              <select name="properties[OS AXIS]" id="os-axis">
                <option value="">Select AXIS</option>
                <option value="1°">1°</option>
                <option value="5°">5°</option>
                <option value="10°">10°</option>
                <option value="15°">15°</option>
                <option value="20°">20°</option>
                <option value="25°">25°</option>
                <option value="30°">30°</option>
                <option value="35°">35°</option>
                <option value="40°">40°</option>
                <option value="45°">45°</option>
                <option value="50°">50°</option>
                <option value="55°">55°</option>
                <option value="60°">60°</option>
                <option value="65°">65°</option>
                <option value="70°">70°</option>
                <option value="75°">75°</option>
                <option value="80°">80°</option>
                <option value="85°">85°</option>
                <option value="90°">90°</option>
                <option value="95°">95°</option>
                <option value="100°">100°</option>
                <option value="105°">105°</option>
                <option value="110°">110°</option>
                <option value="115°">115°</option>
                <option value="120°">120°</option>
                <option value="125°">125°</option>
                <option value="130°">130°</option>
                <option value="135°">135°</option>
                <option value="140°">140°</option>
                <option value="145°">145°</option>
                <option value="150°">150°</option>
                <option value="155°">155°</option>
                <option value="160°">160°</option>
                <option value="165°">165°</option>
                <option value="170°">170°</option>
                <option value="175°">175°</option>
                <option value="180°">180°</option>
              </select>
            </div>
          </div>

          <!-- ADD fields for Bifocal/Progressive -->
          <div id="add-fields" style="display: none;">
            <h3>➕ ADD (Addition)</h3>
            <div class="form-row">
              <div class="form-group">
                <label>OD ADD</label>
                <select name="properties[OD ADD]" id="od-add">
                  <option value="">Select ADD</option>
                  <option value="+0.75">+0.75</option>
                  <option value="+1.00">+1.00</option>
                  <option value="+1.25">+1.25</option>
                  <option value="+1.50">+1.50</option>
                  <option value="+1.75">+1.75</option>
                  <option value="+2.00">+2.00</option>
                  <option value="+2.25">+2.25</option>
                  <option value="+2.50">+2.50</option>
                  <option value="+2.75">+2.75</option>
                  <option value="+3.00">+3.00</option>
                </select>
              </div>
              <div class="form-group">
                <label>OS ADD</label>
                <select name="properties[OS ADD]" id="os-add">
                  <option value="">Select ADD</option>
                  <option value="+0.75">+0.75</option>
                  <option value="+1.00">+1.00</option>
                  <option value="+1.25">+1.25</option>
                  <option value="+1.50">+1.50</option>
                  <option value="+1.75">+1.75</option>
                  <option value="+2.00">+2.00</option>
                  <option value="+2.25">+2.25</option>
                  <option value="+2.50">+2.50</option>
                  <option value="+2.75">+2.75</option>
                  <option value="+3.00">+3.00</option>
                </select>
              </div>
            </div>
          </div>

          <!-- PD (Pupillary Distance) -->
          <h3>📏 PD (Pupillary Distance)</h3>
          <div class="form-group">
            <label>
              <input type="checkbox" id="two-pd-checkbox" onchange="togglePDFields()">
              I have separate PD numbers for right and left eyes
            </label>
          </div>

          <div id="single-pd-field">
            <div class="form-group">
              <label>PD (Single)</label>
              <select name="properties[PD]" id="pd-single">
                <option value="">Select PD</option>
                <option value="54.0mm">54.0mm</option>
                <option value="55.0mm">55.0mm</option>
                <option value="56.0mm">56.0mm</option>
                <option value="57.0mm">57.0mm</option>
                <option value="58.0mm">58.0mm</option>
                <option value="59.0mm">59.0mm</option>
                <option value="60.0mm">60.0mm</option>
                <option value="61.0mm">61.0mm</option>
                <option value="62.0mm">62.0mm</option>
                <option value="63.0mm">63.0mm</option>
                <option value="64.0mm">64.0mm</option>
                <option value="65.0mm">65.0mm</option>
                <option value="66.0mm">66.0mm</option>
                <option value="67.0mm">67.0mm</option>
                <option value="68.0mm">68.0mm</option>
                <option value="69.0mm">69.0mm</option>
                <option value="70.0mm">70.0mm</option>
              </select>
            </div>
          </div>

          <div id="dual-pd-fields" style="display: none;">
            <div class="form-row">
              <div class="form-group">
                <label>PD Right</label>
                <select name="properties[PD Right]" id="pd-right">
                  <option value="">Select PD Right</option>
                  <option value="27.0mm">27.0mm</option>
                  <option value="27.5mm">27.5mm</option>
                  <option value="28.0mm">28.0mm</option>
                  <option value="28.5mm">28.5mm</option>
                  <option value="29.0mm">29.0mm</option>
                  <option value="29.5mm">29.5mm</option>
                  <option value="30.0mm">30.0mm</option>
                  <option value="30.5mm">30.5mm</option>
                  <option value="31.0mm">31.0mm</option>
                  <option value="31.5mm">31.5mm</option>
                  <option value="32.0mm">32.0mm</option>
                  <option value="32.5mm">32.5mm</option>
                  <option value="33.0mm">33.0mm</option>
                  <option value="33.5mm">33.5mm</option>
                  <option value="34.0mm">34.0mm</option>
                  <option value="34.5mm">34.5mm</option>
                  <option value="35.0mm">35.0mm</option>
                </select>
              </div>
              <div class="form-group">
                <label>PD Left</label>
                <select name="properties[PD Left]" id="pd-left">
                  <option value="">Select PD Left</option>
                  <option value="27.0mm">27.0mm</option>
                  <option value="27.5mm">27.5mm</option>
                  <option value="28.0mm">28.0mm</option>
                  <option value="28.5mm">28.5mm</option>
                  <option value="29.0mm">29.0mm</option>
                  <option value="29.5mm">29.5mm</option>
                  <option value="30.0mm">30.0mm</option>
                  <option value="30.5mm">30.5mm</option>
                  <option value="31.0mm">31.0mm</option>
                  <option value="31.5mm">31.5mm</option>
                  <option value="32.0mm">32.0mm</option>
                  <option value="32.5mm">32.5mm</option>
                  <option value="33.0mm">33.0mm</option>
                  <option value="33.5mm">33.5mm</option>
                  <option value="34.0mm">34.0mm</option>
                  <option value="34.5mm">34.5mm</option>
                  <option value="35.0mm">35.0mm</option>
                </select>
              </div>
            </div>
          </div>

          <!-- ✅ PRISM with PRICING -->
          <h3>🔺 Prism (Optional) - Additional Rs 500</h3>
          <div class="form-group">
            <label>
              <input type="checkbox" id="prism-checkbox" onchange="togglePrismFields()">
              Add Prism Correction (+Rs 500)
            </label>
            <input type="hidden" name="id" id="shopify-variant-id" value="{{ product.variants.first.id }}">
          </div>

          <div id="prism-fields" style="display: none;">
            <div class="form-row">
              <div class="form-group">
                <label>Prism OD</label>
                <select name="properties[Prism OD]" id="prism-od">
                  <option value="">Select Prism OD</option>
                  <option value="0.25">0.25</option>
                  <option value="0.50">0.50</option>
                  <option value="0.75">0.75</option>
                  <option value="1.00">1.00</option>
                  <option value="1.25">1.25</option>
                  <option value="1.50">1.50</option>
                  <option value="1.75">1.75</option>
                  <option value="2.00">2.00</option>
                </select>
              </div>
              <div class="form-group">
                <label>Prism OS</label>
                <select name="properties[Prism OS]" id="prism-os">
                  <option value="">Select Prism OS</option>
                  <option value="0.25">0.25</option>
                  <option value="0.50">0.50</option>
                  <option value="0.75">0.75</option>
                  <option value="1.00">1.00</option>
                  <option value="1.25">1.25</option>
                  <option value="1.50">1.50</option>
                  <option value="1.75">1.75</option>
                  <option value="2.00">2.00</option>
                </select>
              </div>
              <div class="form-group">
                <label>Base Direction</label>
                <select name="properties[Base Direction]" id="base-direction">
                  <option value="">Select Base Direction</option>
                  <option value="Base Up">Base Up</option>
                  <option value="Base Down">Base Down</option>
                  <option value="Base In">Base In</option>
                  <option value="Base Out">Base Out</option>
                </select>
              </div>
            </div>
          </div>

          <!-- ✅ PRICING DISPLAY -->
          <div id="pricing-display" class="price-display" style="display: none;">
            <h4>💰 Pricing Breakdown</h4>
            <div class="price-item">
              <span>Base Frame Price:</span>
              <span id="base-price">{{ product.price | money }}</span>
            </div>
            <div class="price-item" id="prism-price-item" style="display: none;">
              <span>Prism Correction:</span>
              <span>+Rs 500</span>
            </div>
            <div class="price-item total-price">
              <span>Total Price:</span>
              <span id="total-price">{{ product.price | money }}</span>
            </div>
          </div>

          <div class="action-buttons">
            <button type="button" class="btn-secondary" onclick="goBack()">← Back</button>
            <button type="button" class="btn-primary btn-final-screen">Next →</button>
          </div>
        </div>

        <!-- File Upload Form -->
        <div id="upload-form-screen" class="form-section">
          <h2>📎 Upload Your Prescription</h2>

          <!-- Entry Method -->
          <input type="hidden" name="properties[Entry Method]" value="File Upload">

          <div class="form-group">
            <label>Upload Prescription File (JPG, PNG, PDF)</label>
            <input
              type="file"
              name="properties[Prescription File]"
              accept=".jpg,.jpeg,.png,.pdf"
              id="prescription-file"
            >
          </div>

          <div class="action-buttons">
            <button type="button" class="btn-secondary" onclick="goBack()">← Back</button>
            <button type="button" class="btn-primary btn-final-screen">Next →</button>
          </div>
        </div>

        <!-- Reading Powers Selection -->
        <div id="reading-form-screen" class="form-section">
          <h2>📖 Select Your Reading Power</h2>

          <!-- Entry Method -->
          <input type="hidden" name="properties[Entry Method]" value="Power Selection">

          <div class="reading-powers">
            <button type="button" class="reading-power-btn" onclick="selectReadingPower('+1.00')">+1.00</button>
            <button type="button" class="reading-power-btn" onclick="selectReadingPower('+1.25')">+1.25</button>
            <button type="button" class="reading-power-btn" onclick="selectReadingPower('+1.50')">+1.50</button>
            <button type="button" class="reading-power-btn" onclick="selectReadingPower('+1.75')">+1.75</button>
            <button type="button" class="reading-power-btn" onclick="selectReadingPower('+2.00')">+2.00</button>
            <button type="button" class="reading-power-btn" onclick="selectReadingPower('+2.25')">+2.25</button>
            <button type="button" class="reading-power-btn" onclick="selectReadingPower('+2.50')">+2.50</button>
            <button type="button" class="reading-power-btn" onclick="selectReadingPower('+2.75')">+2.75</button>
            <button type="button" class="reading-power-btn" onclick="selectReadingPower('+3.00')">+3.00</button>
          </div>

          <input type="hidden" name="properties[Reading Power]" id="selected-reading-power">

          <div class="action-buttons">
            <button type="button" class="btn-secondary" onclick="goBack()">← Back</button>
            <button type="button" class="btn-primary btn-final-screen">Next →</button>
          </div>
        </div>

        <!-- Non-Prescription Form -->
        <div id="non-prescription-form-screen" class="form-section">
          <h2>🔍 Select Lens Type</h2>

          <div class="form-group">
            <label>Lens Type</label>
            <select id="lens-option">
              <option value="">Select Lens Type</option>
              <option value="Clear">Clear</option>
              <option value="Blue Light Blocking">Blue Light Blocking</option>
              <option value="Photochromic">Photochromic</option>
              <option value="Tinted">Tinted</option>
            </select>
          </div>

          <div class="action-buttons">
            <button type="button" class="btn-secondary" onclick="goBack()">← Back</button>
            <button type="button" class="btn-primary" onclick="submitLensForm(event)">Add to Cart</button>
          </div>
        </div>

        <!-- FINAL LENS OPTIONS SCREEN -->
        <div id="lens-final-options-screen" class="form-section">
          <h2>⚙️ Select Lens Configuration</h2>

          <div class="form-group">
            <label>Lens Type</label>
            <select name="properties[Lens Main Type]" id="lens-option-type" required>
              <option value="">Select Lens Type</option>
            </select>
          </div>

          <div class="form-group">
            <label>Lens Option</label>
            <select name="properties[Lens Option]" id="lens-option-option" required>
              <option value="">Select Option</option>
            </select>
          </div>

          <div class="form-group">
            <label>Coating</label>
            <select name="properties[Coating]" id="coating-select" required>
              <option value="">Select Coating</option>
              <option value="Standard Coating">Standard Coating</option>
              <option value="Premium Coating">Premium Coating</option>
              <option value="Blue Cut Digital Protection">Blue Cut Digital Protection</option>
              <option value="Solid Tint">Solid Tint</option>
              <option value="Gradient">Gradient</option>
              <option value="Mirror Tint">Mirror Tint</option>
            </select>
          </div>

          <!-- ✅ ENHANCED PRICING DISPLAY WITH PRISM -->
          <div class="form-group">
            <input type="hidden" name="properties[_Extra Price]" id="extra-price" value="0">
            <div class="price-display">
              <h4>💰 Extra Charges</h4>
              <div class="price-item" id="lens-option-price-item" style="display: none;">
                <span>Lens Option:</span>
                <span>Rs <span id="lens-option-price">0</span></span>
              </div>
              <div class="price-item" id="coating-price-item" style="display: none;">
                <span>Coating:</span>
                <span>Rs <span id="coating-price">0</span></span>
              </div>
              <div class="price-item" id="prism-final-price-item" style="display: none;">
                <span>Prism Correction:</span>
                <span>Rs <span id="prism-final-price">500</span></span>
              </div>
              <div class="price-item total-price">
                <span>Total Extra Charges:</span>
                <span>Rs <span id="extra-price-display">0</span></span>
              </div>
            </div>
          </div>

          <div class="action-buttons">
            <button type="button" class="btn-secondary" onclick="goBack()">← Back</button>
            <button type="button" class="btn-primary" onclick="submitLensForm()">
              <span class="loading" style="display: none;"></span>
              Add to Cart
            </button>
          </div>
        </div>
        <input type="hidden" name="properties[Total Price]" id="total-price-field" value="">
      </form>
    </div>

    <!-- 👇 Subtotal sticky bottom -->
    <div class="drawer-subtotal-sticky" id="drawer-subtotal-sticky" style="display:none;">
      <span>Subtotal:</span>
      <span id="drawer-total-price"></span>
    </div>
  </div>
</div>
<div id="lens-backdrop" onclick="closeLensDrawer()"></div>

<script>
  // ✅ CRITICAL: Set your server URL here
  const SERVER_URL = 'https://cart-api-rdwk.onrender.com'; // Replace with YOUR ngrok URL

  // ✅ ENHANCED SUBMIT FUNCTION WITH PRISM PRICING
  async function submitLensForm() {
    const productTitle = document.getElementById('product-title')?.value || '';
    const productId = document.getElementById('product-id')?.value;

    try {
      // 📦 Base price calculations
      const basePrice = parseFloat(document.getElementById('base-product-price')?.value || 0);
      const extraPriceForm = parseFloat(document.getElementById('extra-price')?.value || 0);

      const prismSelected = document.getElementById('prism-correction')?.value === 'Yes';
      const prescriptionType = document.getElementById('prescription-type')?.value || '';
      const isManualWithPrism = prescriptionType === 'manual' && prismSelected;
      const prismCharge = isManualWithPrism ? 500 : 0;

      const totalPrice = basePrice + extraPriceForm;

      // 🧾 Prism data (optional)
      const prismOD = document.getElementById('prism-od')?.value || '';
      const prismOS = document.getElementById('prism-os')?.value || '';
      const prismBase = document.getElementById('base-direction')?.value || '';

      // 💰 Total price field update
      const totalPriceField = document.getElementById('total-price-field');
      if (totalPriceField) totalPriceField.value = totalPrice.toFixed(2);

      // 🔄 Loading UI state
      const submitBtn = document.querySelector('button[onclick="submitLensForm()"]');
      const loading = submitBtn?.querySelector('.loading');
      if (loading) loading.style.display = 'inline-block';
      if (submitBtn) submitBtn.disabled = true;

      const fileInput = document.querySelector('input[name="properties[Prescription File]"]');
      let prescriptionFileUrl = '';

      console.log('fileInput:', fileInput);
      console.log('fileInput.files:', fileInput?.files);

      if (fileInput && fileInput.files.length > 0) {
        const file = fileInput.files[0];
        const formData = new FormData();
        formData.append('file', file);

        {% comment %} const uploadResponse = await fetch(`${SERVER_URL}/api/upload-prescription`, { {% endcomment %}
        const uploadResponse = await fetch(`${SERVER_URL}/api/upload-prescription`, {
          method: 'POST',
          body: formData,
        });

        const uploadData = await uploadResponse.json();
        if (uploadData.success) {
          prescriptionFileUrl = uploadData.url;
        } else {
          throw new Error('File upload failed');
        }
      }


      // 🛒 Variant Properties (for reference/debug or later use)
      const properties = {
        'Lens Type': document.getElementById('dynamic-lens-type')?.value || '',
        'Coating': document.getElementById('coating-select')?.value || '',
        'Tint Color': document.getElementById('tint-color')?.value || '',
        'Extra Coating': document.querySelector('select[name="properties[Extra Coating]"]')?.value || '',
        'Reading Power': document.getElementById('selected-reading-power')?.value || '',
        'Lens Option': document.getElementById('lens-option-option')?.value || '',
        'Prism Correction': prismSelected ? 'Yes' : 'No',
        'Total Price': totalPrice.toFixed(2),
        'OD SPH': document.getElementById('od-sph')?.value || '',
        'OD CYL': document.getElementById('od-cyl')?.value || '',
        'OD AXIS': document.getElementById('od-axis')?.value || '',
        'OS SPH': document.getElementById('os-sph')?.value || '',
        'OS CYL': document.getElementById('os-cyl')?.value || '',
        'OS AXIS': document.getElementById('os-axis')?.value || '',
        'OD ADD': document.getElementById('od-add')?.value || '',
        'OS ADD': document.getElementById('os-add')?.value || '',
        'PD': document.getElementById('pd-single')?.value || '',
        'PD Right': document.getElementById('pd-right')?.value || '',
        'PD Left': document.getElementById('pd-left')?.value || '',
        'Prescription Type': prescriptionType,
        'Entry Method': document.querySelector('input[name="properties[Entry Method]"]')?.value || 'Manual Entry',
        'Prescription File': prescriptionFileUrl || '',
        productTitle,
        ...(isManualWithPrism && {
          'Prism OD': prismOD,
          'Prism OS': prismOS,
          'Base Direction': prismBase,
        }),
      };

      // 🧾 Prepare payload for Draft Order
      const payload = {
        lensType: properties['Lens Type'],
        coating: properties['Coating'],
        tintColor: properties['Tint Color'],
        extraCoating: properties['Extra Coating'],
        readingPower: properties['Reading Power'],
        lensOption: properties['Lens Option'],
        extraPrice: totalPrice,
        prismCorrection: properties['Prism Correction'],
        odSPH: properties['OD SPH'],
        odCYL: properties['OD CYL'],
        odAXIS: properties['OD AXIS'],
        osSPH: properties['OS SPH'],
        osCYL: properties['OS CYL'],
        osAXIS: properties['OS AXIS'],
        odADD: properties['OD ADD'],
        osADD: properties['OS ADD'],
        pd: properties['PD'],
        pdRight: properties['PD Right'],
        pdLeft: properties['PD Left'],
        prescriptionType: properties['Prescription Type'],
        entryMethod: properties['Entry Method'],
        prescriptionFile: properties['Prescription File'],
        productTitle,
        productId,
        ...(isManualWithPrism && {
          prismOD,
          prismOS,
          prismBase,
        })
      };

      console.log('🚀 Sending Draft Order Request to Server:', SERVER_URL);
      console.log('📋 Payload:', payload);

      // 📡 POST to backend
      const response = await fetch(`${SERVER_URL}/api/create-draft-order`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          "ngrok-skip-browser-warning": "true",
        },
        body: JSON.stringify(payload),
      });

      const data = await response.json();
      console.log('📨 Response from Server:', data);

      if (!data || !data.draftOrderUrl) {
        throw new Error("Draft order creation failed: Missing draftOrderUrl.");
      }

      // ✅ Redirect to draft order
      console.log('✅ Redirecting to Draft Order URL...');
      window.location.href = data.draftOrderUrl;

    } catch (err) {
      console.error('❌ submitLensForm Error:', err);
      alert(`Something went wrong: ${err.message}`);
      window.location.reload();
    } finally {
      const submitBtn = document.querySelector('button[onclick="submitLensForm()"]');
      const loading = submitBtn?.querySelector('.loading');
      if (loading) loading.style.display = 'none';
      if (submitBtn) submitBtn.disabled = false;
    }
  }

  // Progress tracking
  let currentStep = 1;
  const totalSteps = 5;

  function updateProgress(step) {
    currentStep = step;
    const progressBar = document.getElementById('progress-bar');
    const progressPercentage = (step / totalSteps) * 100;
    progressBar.style.width = progressPercentage + '%';

    // Update step circles
    for (let i = 1; i <= totalSteps; i++) {
      const stepCircle = document.getElementById(`step-${i}`);
      const stepLabel = stepCircle.nextElementSibling;
      const connector = stepCircle.parentElement.querySelector('.step-connector');

      if (i < step) {
        stepCircle.className = 'step-circle completed';
        stepCircle.innerHTML = '✓';
        stepLabel.className = 'step-label';
        if (connector) connector.className = 'step-connector completed';
      } else if (i === step) {
        stepCircle.className = 'step-circle active';
        stepCircle.innerHTML = i;
        stepLabel.className = 'step-label active';
      } else {
        stepCircle.className = 'step-circle';
        stepCircle.innerHTML = i;
        stepLabel.className = 'step-label';
        if (connector) connector.className = 'step-connector';
      }
    }
  }

  document.addEventListener('DOMContentLoaded', function () {
    const finalLensTypeSelect = document.querySelector('#lens-option-type');
    const finalLensOptionSelect = document.querySelector('#lens-option-option');
    const coatingSelect = document.querySelector('#coating-select');

    const lensOptionsMap = {
      Clear: ['1.56 Standard lens', '1.61 Thin lenses', '1.76 super thin lenses'],
      'Blue Light Blocking': ['1.56 Standard lens', '1.61 Thin lenses', '1.76 super thin lenses', 'Heavy Screen Use'],
      Photochromic: ['Photochromic Grey', 'Photochromic Brown'],
      Sunglasses: ['1.56 Standard lens', '1.61 Thin lenses', '1.76 super thin lenses', 'Polarized'],
    };

    // ✅ Populate Lens Type dropdown on load
    Object.keys(lensOptionsMap).forEach((lensType) => {
      const o = document.createElement('option');
      o.value = lensType;
      o.textContent = lensType;
      finalLensTypeSelect.appendChild(o);
    });

    const baseCoatingOptions = ['Standard Coating', 'Premium Coating', 'Blue cut Digital protection'];
    const tintOptions = ['Solid Tint', 'Gradient', 'Mirror Tint'];
    const tintColorOptions = ['Blue', 'Green', 'Brown', 'Yellow', 'Grey', 'Black'];

    let currentSelectedTint = null;

    function updateFinalLensOptions() {
      const chosenType = finalLensTypeSelect.value;
      const opts = lensOptionsMap[chosenType] || [];
      finalLensOptionSelect.innerHTML = '<option value="">Select Option</option>';
      opts.forEach((text) => {
        const o = document.createElement('option');
        o.value = text;
        o.textContent = text;
        finalLensOptionSelect.appendChild(o);
      });
      updateCoatingOptions();
      calculateTotalExtraPrice();
    }

    function updateCoatingOptions() {
      const lensType = finalLensTypeSelect.value;
      const lensOption = finalLensOptionSelect.value;
      coatingSelect.innerHTML = '<option value="">Select Coating</option>';

      if (lensType === 'Sunglasses') {
        if (['1.56 Standard lens', '1.61 Thin lenses', '1.76 super thin lenses'].includes(lensOption)) {
          tintOptions.forEach((opt) => {
            const o = document.createElement('option');
            o.value = opt;
            o.textContent = opt;
            coatingSelect.appendChild(o);
          });
          currentSelectedTint = null;
        } else if (lensOption === 'Polarized') {
          baseCoatingOptions.forEach((opt) => {
            const o = document.createElement('option');
            o.value = opt;
            o.textContent = opt;
            coatingSelect.appendChild(o);
          });
        }
      } else if (['Clear', 'Blue Light Blocking', 'Photochromic'].includes(lensType)) {
        baseCoatingOptions.forEach((opt) => {
          const o = document.createElement('option');
          o.value = opt;
          o.textContent = opt;
          coatingSelect.appendChild(o);
        });
      }
    }

    coatingSelect.addEventListener('change', function () {
      const selected = coatingSelect.value;
      if (tintOptions.includes(selected) && !document.querySelector('#tint-color')) {
        const colorGroup = document.createElement('div');
        colorGroup.className = 'form-group';
        colorGroup.id = 'tint-color-group';

        const label = document.createElement('label');
        label.textContent = 'Select Tint Color';

        const select = document.createElement('select');
        select.name = 'properties[Tint Color]';
        select.id = 'tint-color';
        select.required = true;

        const defaultOpt = document.createElement('option');
        defaultOpt.value = '';
        defaultOpt.textContent = 'Select Tint Color';
        select.appendChild(defaultOpt);

        tintColorOptions.forEach((color) => {
          const o = document.createElement('option');
          o.value = color;
          o.textContent = color;
          select.appendChild(o);
        });

        colorGroup.appendChild(label);
        colorGroup.appendChild(select);

        coatingSelect.parentElement.insertAdjacentElement('afterend', colorGroup);

        select.addEventListener('change', function () {
          const existingCoating = document.querySelector('#extra-coating-group');
          if (existingCoating) existingCoating.remove();

          const extraGroup = document.createElement('div');
          extraGroup.className = 'form-group';
          extraGroup.id = 'extra-coating-group';

          const extraLabel = document.createElement('label');
          extraLabel.textContent = 'Select Extra Coating';

          const extraSelect = document.createElement('select');
          extraSelect.name = 'properties[Extra Coating]';
          extraSelect.required = true;

          const extraDefault = document.createElement('option');
          extraDefault.value = '';
          extraDefault.textContent = 'Select Extra Coating';
          extraSelect.appendChild(extraDefault);

          baseCoatingOptions.forEach((c) => {
            const o = document.createElement('option');
            o.value = c;
            o.textContent = c;
            extraSelect.appendChild(o);
          });

          extraGroup.appendChild(extraLabel);
          extraGroup.appendChild(extraSelect);

          colorGroup.insertAdjacentElement('afterend', extraGroup);
        });
      } else {
        const colorGroup = document.querySelector('#tint-color-group');
        if (colorGroup) colorGroup.remove();
        const extraGroup = document.querySelector('#extra-coating-group');
        if (extraGroup) extraGroup.remove();
      }
      calculateTotalExtraPrice();
    });

    const priceMap = {
      'Lens Option': {
        '1.56 Standard lens': 200,
        '1.61 Thin lenses': 500,
        '1.76 super thin lenses': 800,
        'Heavy Screen Use': 400,
        'Photochromic Grey': 600,
        'Photochromic Brown': 600,
        Polarized: 1000,
      },

      Coating: {
        'Standard Coating': 200,
        'Premium Coating': 400,
        'Blue cut Digital protection': 600,
        'Solid Tint': 300,
        Gradient: 350,
        'Mirror Tint': 450,
      },
      'Reading Power': {
        Yes: 300,
        No: 0,
      },
    };

    // ✅ ENHANCED PRICE CALCULATION WITH PRISM
    function calculateTotalExtraPrice() {
      const lensOption = finalLensOptionSelect?.value || '';
      const coating = coatingSelect?.value || '';
      const readingPower = document.querySelector('select[name="properties[Add Reading Power]"]')?.value || 'No';
      const extraCoating = document.querySelector('select[name="properties[Extra Coating]"]')?.value || '';

      // ✅ CHECK FOR PRISM SELECTION
      const prismSelected = document.getElementById('prism-correction')?.value === 'Yes';
      const prismCharge = prismSelected ? 500 : 0;

      const lensOptionPrice = priceMap['Lens Option'][lensOption] || 0;
      const coatingPrice = priceMap['Coating'][coating] || 0;
      const readingPrice = priceMap['Reading Power'][readingPower] || 0;
      const extraCoatingPrice = priceMap['Coating'][extraCoating] || 0;

      const total = lensOptionPrice + coatingPrice + readingPrice + extraCoatingPrice + prismCharge;

      // ✅ UPDATE INDIVIDUAL PRICE DISPLAYS
      const lensOptionPriceItem = document.getElementById('lens-option-price-item');
      const lensOptionPriceSpan = document.getElementById('lens-option-price');
      if (lensOptionPrice > 0) {
        lensOptionPriceItem.style.display = 'flex';
        lensOptionPriceSpan.textContent = lensOptionPrice;
      } else {
        lensOptionPriceItem.style.display = 'none';
      }

      const coatingPriceItem = document.getElementById('coating-price-item');
      const coatingPriceSpan = document.getElementById('coating-price');
      if (coatingPrice > 0) {
        coatingPriceItem.style.display = 'flex';
        coatingPriceSpan.textContent = coatingPrice;
      } else {
        coatingPriceItem.style.display = 'none';
      }

      // ✅ SHOW PRISM PRICE IN FINAL SCREEN
      const prismFinalPriceItem = document.getElementById('prism-final-price-item');
      if (prismSelected) {
        prismFinalPriceItem.style.display = 'flex';
      } else {
        prismFinalPriceItem.style.display = 'none';
      }

      const hiddenInput = document.querySelector('#extra-price');
      if (hiddenInput) hiddenInput.value = total;

      const display = document.querySelector('#extra-price-display');
      if (display) display.textContent = total;
    }

    finalLensTypeSelect.addEventListener('change', updateFinalLensOptions);
    finalLensOptionSelect.addEventListener('change', () => {
      updateCoatingOptions();
      calculateTotalExtraPrice();
    });

    const rpSelect = document.querySelector('select[name="properties[Add Reading Power]"]');
    if (rpSelect) rpSelect.addEventListener('change', calculateTotalExtraPrice);

    // ✅ Final Screen Trigger
    document.querySelectorAll('.btn-final-screen').forEach(function (btn) {
      btn.addEventListener('click', function (e) {
        e.preventDefault();
        finalLensTypeSelect.value = '';
        updateFinalLensOptions();
        showScreen('lens-final-options-screen');
        updateProgress(4);
        // ✅ RECALCULATE PRICES WHEN ENTERING FINAL SCREEN
        calculateTotalExtraPrice();
      });
    });

    calculateTotalExtraPrice();
  });

  const title_container = (window.productTitleFromLiquid = '{{ product.title | escape }}');

  window.productTitleFromLiquid = '{{ product.title | escape }}';

  


  window.VARIANT_WITHOUT_PRISM = '{{ product.variants[0].id }}';
  window.VARIANT_WITH_PRISM = '{{ product.variants[1].id }}';

  // ✅ DEFINITIVE FIX: Lens Type Issue Resolved
  let currentScreen = 'lens-options';
  let selectedLensType = '';
  let selectedSubOption = '';
  let basePrice = parseFloat('{{ product.price | money_without_currency }}');
  let additionalPrice = 0;

  function openLensDrawer() {
    document.getElementById('lens-drawer').classList.add('open');
    document.getElementById('lens-backdrop').classList.add('open');

    if (window.calculateTotalPrice) {
      window.calculateTotalPrice();
    }
  }
  function closeLensDrawer() {
    document.getElementById('lens-drawer').classList.remove('open');
    document.getElementById('lens-backdrop').classList.remove('open');
  }

  document.addEventListener('DOMContentLoaded', function () {
  document.getElementById('open-lens-btn')?.addEventListener('click', openLensDrawer);
  });

  function showScreen(screenId) {
    // Hide all screens
    const screens = [
      'lens-options-screen',
      'sub-options-screen',
      'manual-form-screen',
      'upload-form-screen',
      'reading-form-screen',
      'non-prescription-form-screen',
      'lens-final-options-screen',
    ];
    screens.forEach((id) => {
      const element = document.getElementById(id);
      if (element) element.style.display = 'none';
    });

    // Show target screen with animation
    const targetScreen = document.getElementById(screenId);
    if (targetScreen) {
      targetScreen.style.display = 'block';
      targetScreen.classList.add('active');
      currentScreen = screenId;
    }
  }

  // ✅ CRITICAL FIX: Set lens type immediately when selected
  function selectLensType(lensType) {
    selectedLensType = lensType;

    // ✅ IMMEDIATE LENS TYPE SETTING
    const dynamicLensTypeField = document.getElementById('dynamic-lens-type');

    if (lensType === 'single-vision') {
      dynamicLensTypeField.value = 'Single Vision';
      showScreen('sub-options-screen');
      updateProgress(2);
    } else if (lensType === 'bifocal-progressive') {
      dynamicLensTypeField.value = 'Bifocal & Progressive';
      showScreen('sub-options-screen');
      updateProgress(2);
    } else if (lensType === 'reading') {
      dynamicLensTypeField.value = 'Reading';
      showScreen('reading-form-screen');
      updateProgress(3);
    } else if (lensType === 'non-prescription') {
      dynamicLensTypeField.value = 'Non-Prescription';
      showScreen('non-prescription-form-screen');
      updateProgress(3);
    } else if (lensType === 'frame-only') {
      dynamicLensTypeField.value = 'Frame Only';
      updateProgress(5);
      // Submit immediately for frame only
      document.getElementById('lens-cart-form').submit();
    }

    console.log('✅ Lens Type Set:', dynamicLensTypeField.value);
  }

  function selectSubOption(subOption) {
    selectedSubOption = subOption;

    if (subOption === 'manual') {
      // Show/hide ADD fields for bifocal-progressive
      if (selectedLensType === 'bifocal-progressive') {
        document.getElementById('add-fields').style.display = 'block';
      } else {
        document.getElementById('add-fields').style.display = 'none';
      }

      showScreen('manual-form-screen');
      updateProgress(3);
    } else if (subOption === 'upload') {
      showScreen('upload-form-screen');
      updateProgress(3);
    }
  }

  function selectReadingPower(power) {
    // Remove selected class from all buttons
    document.querySelectorAll('.reading-power-btn').forEach((btn) => {
      btn.classList.remove('selected');
    });

    // Add selected class to clicked button
    event.target.classList.add('selected');

    // Set hidden field value
    document.getElementById('selected-reading-power').value = power;
  }

  function togglePDFields() {
    const checkbox = document.getElementById('two-pd-checkbox');
    const singlePD = document.getElementById('single-pd-field');
    const dualPD = document.getElementById('dual-pd-fields');

    if (checkbox.checked) {
      singlePD.style.display = 'none';
      dualPD.style.display = 'block';
      // Clear single PD value
      document.getElementById('pd-single').value = '';
    } else {
      singlePD.style.display = 'block';
      dualPD.style.display = 'none';
      // Clear dual PD values
      document.getElementById('pd-right').value = '';
      document.getElementById('pd-left').value = '';
    }
  }

  let prismAlreadyAdded = false;

  // ✅ ENHANCED PRISM PRICING FUNCTIONALITY
  function togglePrismFields() {
    const checkbox = document.getElementById('prism-checkbox');
    const prismFields = document.getElementById('prism-fields');
    const pricingDisplay = document.getElementById('pricing-display');
    const prismPriceItem = document.getElementById('prism-price-item');
    const variantInput = document.getElementById('shopify-variant-id');

    // ✅ Replace with your real variant IDs
    const variantWithoutPrism = window.VARIANT_WITHOUT_PRISM;
    const variantWithPrism = window.VARIANT_WITH_PRISM;
    variantInput.value = variantWithPrism;

    if (checkbox.checked) {
      prismFields.style.display = 'block';
      pricingDisplay.style.display = 'block';
      prismPriceItem.style.display = 'flex';

      additionalPrice = 500;
      document.getElementById('additional-price').value = additionalPrice;
      document.getElementById('prism-correction').value = 'Yes';
    } else {
      prismFields.style.display = 'none';
      pricingDisplay.style.display = 'none';
      prismPriceItem.style.display = 'none';

      additionalPrice = 0;
      document.getElementById('additional-price').value = additionalPrice;
      document.getElementById('prism-correction').value = 'No';
    }
    updateTotalPrice();
  }

  function updateTotalPrice() {
    const totalPrice = basePrice + additionalPrice;
    const basePriceElement = document.getElementById('base-price');
    const totalPriceElement = document.getElementById('total-price');

    if (basePriceElement) {
      basePriceElement.textContent = 'Rs ' + basePrice.toLocaleString();
    }

    if (totalPriceElement) {
      totalPriceElement.textContent = 'Rs ' + totalPrice.toLocaleString();
    }
  }

  function goBack() {
    if (currentScreen === 'sub-options-screen') {
      showScreen('lens-options-screen');
      updateProgress(1);
    } else if (currentScreen === 'manual-form-screen' || currentScreen === 'upload-form-screen') {
      showScreen('sub-options-screen');
      updateProgress(2);
    } else if (currentScreen === 'lens-final-options-screen') {
      if (selectedLensType === 'reading') {
        showScreen('reading-form-screen');
        updateProgress(3);
      } else if (selectedLensType === 'non-prescription') {
        showScreen('non-prescription-form-screen');
        updateProgress(3);
      } else {
        showScreen('manual-form-screen');
        updateProgress(3);
      }
    } else {
      showScreen('lens-options-screen');
      updateProgress(1);
    }
  }

  function resetForm() {
    selectedLensType = '';
    selectedSubOption = '';
    additionalPrice = 0;
    currentStep = 1;
    document.getElementById('lens-cart-form').reset();

    // ✅ RESET DYNAMIC LENS TYPE
    document.getElementById('dynamic-lens-type').value = '';

    // Reset UI states
    document.querySelectorAll('.reading-power-btn').forEach((btn) => {
      btn.classList.remove('selected');
    });

    // Reset conditional fields
    document.getElementById('add-fields').style.display = 'none';
    document.getElementById('single-pd-field').style.display = 'block';
    document.getElementById('dual-pd-fields').style.display = 'none';
    document.getElementById('prism-fields').style.display = 'none';
    document.getElementById('pricing-display').style.display = 'none';

    if (window.calculateTotalPrice) {
      window.calculateTotalPrice();
    }

    // Reset pricing
    document.getElementById('additional-price').value = '0';
    document.getElementById('prism-correction').value = 'No';

    showScreen('lens-options-screen');
    updateProgress(1);
  }

  // ✅ FORM SUBMISSION DEBUGGING
  {% comment %} document.getElementById('lens-cart-form').addEventListener('submit', function (e) {
    const lensType = document.getElementById('dynamic-lens-type').value;
    console.log('🚀 Form Submitting with Lens Type:', lensType);

    // ✅ FINAL VERIFICATION: Ensure lens type is set
    if (!lensType) {
      e.preventDefault();
      alert('Error: Lens type not set. Please try again.');
      return false;
    }

    // Log all form data for debugging
    const formData = new FormData(this);
    console.log('📋 Complete Form Data:');
    for (let [key, value] of formData.entries()) {
      console.log(`${key}: ${value}`);
    }
  }); {% endcomment %}

  document.getElementById('lens-cart-form').addEventListener('submit', function (e) {
  e.preventDefault();

  const lensType = document.getElementById('dynamic-lens-type').value;
  if (!lensType) {
    alert('Error: Lens type not set. Please try again.');
    return false;
  }

  // Debug log
  const formData = new FormData(this);
  for (let [key, value] of formData.entries()) {
    console.log(`${key}: ${value}`);
  }

  // ✅ Use your working form submission function
  if (window.submitLensForm) {
      window.submitLensForm();
    } else {
      alert('Cart system not ready. Please refresh.');
    }
  });

  // Event listeners
  // ✅ Safe DOM-based setup
  document.addEventListener('DOMContentLoaded', () => {
    // Open modal button
    document.getElementById('open-lens-modal')?.addEventListener('click', openLensDrawer);

    // Close modal when clicking outside
    document.getElementById('lens-modal')?.addEventListener('click', function (e) {
      if (e.target === this) {
        closeLensModal();
      }
    });
  });

  window.selectLensType = selectLensType;
  window.selectSubOption = selectSubOption;
  window.selectReadingPower = selectReadingPower;
  window.openLensDrawer = openLensDrawer;
  window.closeLensDrawer = closeLensDrawer;
  window.resetForm = resetForm;
</script>

{% comment %} <script src="{{ 'lens_cart_handler.js' | asset_url }}"></script> {% endcomment %}
